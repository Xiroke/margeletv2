// This file is auto-generated by @hey-api/openapi-ts

/**
 * Body_upload_avatar_api_users_avatar_me_post
 */
export type BodyUploadAvatarApiUsersAvatarMePost = {
    /**
     * Image
     */
    image: Blob | File;
};

/**
 * CreateMessageNoUserSchema
 */
export type CreateMessageNoUserSchema = {
    /**
     * Message
     * Message must be less than 2000 characters
     */
    message: string;
    /**
     * To Group Id
     */
    to_group_id: string;
};

/**
 * CreateSimpleGroupSchema
 */
export type CreateSimpleGroupSchema = {
    /**
     * Type
     */
    type: 'simple_group' | 'personal_group';
    /**
     * Title
     */
    title: string;
    /**
     * Description
     */
    description: string;
};

/**
 * CreateUserSchema
 */
export type CreateUserSchema = {
    /**
     * Name
     */
    name: string;
    /**
     * Account Name
     */
    account_name: string;
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * LoginUserSchema
 */
export type LoginUserSchema = {
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
};

/**
 * ReadAccessTokenSchema
 */
export type ReadAccessTokenSchema = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Token Type
     */
    token_type: 'bearer';
};

/**
 * ReadMessageSchema
 */
export type ReadMessageSchema = {
    /**
     * Id
     */
    id: string;
    /**
     * Message
     * Message must be less than 2000 characters
     */
    message: string;
    /**
     * User Id
     */
    user_id: string;
    /**
     * To Group Id
     */
    to_group_id: string;
    /**
     * Created At
     */
    created_at: string;
};

/**
 * ReadSimpleGroupSchema
 */
export type ReadSimpleGroupSchema = {
    /**
     * Id
     */
    id: string;
    /**
     * Type
     */
    type: 'simple_group' | 'personal_group';
    /**
     * Created At
     */
    created_at: string;
    /**
     * Title
     */
    title: string;
};

/**
 * UpdatePersonalGroupSchema
 */
export type UpdatePersonalGroupSchema = {
    [key: string]: unknown;
};

/**
 * UpdateSimpleGroupSchema
 */
export type UpdateSimpleGroupSchema = {
    /**
     * Title
     */
    title?: string | null;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Avatar Path
     */
    avatar_path?: string | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

/**
 * WsDataEvent
 */
export type WsDataEvent = 'message';

/**
 * WsInDataSchema
 */
export type WsInDataSchema = {
    event?: WsDataEvent;
    /**
     * Data
     */
    data: unknown;
};

/**
 * WsInMessageSchema
 */
export type WsInMessageSchema = {
    event?: WsDataEvent;
    data: CreateMessageNoUserSchema;
};

/**
 * WsOutDataSchema
 */
export type WsOutDataSchema = {
    event?: WsDataEvent;
    /**
     * Data
     */
    data: unknown;
    /**
     * To User
     */
    to_user: string;
};

/**
 * WsOutMessageSchema
 */
export type WsOutMessageSchema = {
    event?: WsDataEvent;
    data: ReadMessageSchema;
    /**
     * To User
     */
    to_user: string;
};

export type LoginApiAuthLoginPostData = {
    body: LoginUserSchema;
    path?: never;
    query?: never;
    url: '/api/auth/login';
};

export type LoginApiAuthLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginApiAuthLoginPostError = LoginApiAuthLoginPostErrors[keyof LoginApiAuthLoginPostErrors];

export type LoginApiAuthLoginPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RegisterApiAuthRegisterPostData = {
    body: CreateUserSchema;
    path?: never;
    query?: never;
    url: '/api/auth/register';
};

export type RegisterApiAuthRegisterPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterApiAuthRegisterPostError = RegisterApiAuthRegisterPostErrors[keyof RegisterApiAuthRegisterPostErrors];

export type RegisterApiAuthRegisterPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ResendVerificationApiAuthResendVerificationPostData = {
    /**
     * Email
     */
    body: string;
    path?: never;
    query?: never;
    url: '/api/auth/resend_verification';
};

export type ResendVerificationApiAuthResendVerificationPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ResendVerificationApiAuthResendVerificationPostError = ResendVerificationApiAuthResendVerificationPostErrors[keyof ResendVerificationApiAuthResendVerificationPostErrors];

export type ResendVerificationApiAuthResendVerificationPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type VerifyApiAuthVerifyPostData = {
    /**
     * Verification Token
     */
    body: string;
    path?: never;
    query?: never;
    url: '/api/auth/verify';
};

export type VerifyApiAuthVerifyPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VerifyApiAuthVerifyPostError = VerifyApiAuthVerifyPostErrors[keyof VerifyApiAuthVerifyPostErrors];

export type VerifyApiAuthVerifyPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetAccessTokenApiAuthTokenPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/token';
};

export type GetAccessTokenApiAuthTokenPostResponses = {
    /**
     * Successful Response
     */
    200: ReadAccessTokenSchema;
};

export type GetAccessTokenApiAuthTokenPostResponse = GetAccessTokenApiAuthTokenPostResponses[keyof GetAccessTokenApiAuthTokenPostResponses];

export type GetMeApiAuthMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/me';
};

export type GetMeApiAuthMeGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoadAvatarApiUsersAvatarMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/users/avatar/me';
};

export type LoadAvatarApiUsersAvatarMeGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UploadAvatarApiUsersAvatarMePostData = {
    body: BodyUploadAvatarApiUsersAvatarMePost;
    path?: never;
    query?: never;
    url: '/api/users/avatar/me';
};

export type UploadAvatarApiUsersAvatarMePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadAvatarApiUsersAvatarMePostError = UploadAvatarApiUsersAvatarMePostErrors[keyof UploadAvatarApiUsersAvatarMePostErrors];

export type UploadAvatarApiUsersAvatarMePostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUsernamesByIdApiUsersUsernamesPostData = {
    /**
     * User Ids
     */
    body: Array<string>;
    path?: never;
    query?: never;
    url: '/api/users/usernames';
};

export type GetUsernamesByIdApiUsersUsernamesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUsernamesByIdApiUsersUsernamesPostError = GetUsernamesByIdApiUsersUsernamesPostErrors[keyof GetUsernamesByIdApiUsersUsernamesPostErrors];

export type GetUsernamesByIdApiUsersUsernamesPostResponses = {
    /**
     * Response Get Usernames By Id Api Users Usernames Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type GetUsernamesByIdApiUsersUsernamesPostResponse = GetUsernamesByIdApiUsersUsernamesPostResponses[keyof GetUsernamesByIdApiUsersUsernamesPostResponses];

export type GetMyGroupsApiPersonalGroupsMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/personal_groups/me';
};

export type GetMyGroupsApiPersonalGroupsMeGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateApiPersonalGroupsOtherUserIdPostData = {
    body?: never;
    path: {
        /**
         * Other User Id
         */
        other_user_id: string;
    };
    query?: never;
    url: '/api/personal_groups/{other_user_id}';
};

export type CreateApiPersonalGroupsOtherUserIdPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateApiPersonalGroupsOtherUserIdPostError = CreateApiPersonalGroupsOtherUserIdPostErrors[keyof CreateApiPersonalGroupsOtherUserIdPostErrors];

export type CreateApiPersonalGroupsOtherUserIdPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DeleteApiPersonalGroupsIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/personal_groups/{id}';
};

export type DeleteApiPersonalGroupsIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteApiPersonalGroupsIdDeleteError = DeleteApiPersonalGroupsIdDeleteErrors[keyof DeleteApiPersonalGroupsIdDeleteErrors];

export type DeleteApiPersonalGroupsIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateApiPersonalGroupsIdPatchData = {
    body: UpdatePersonalGroupSchema;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/personal_groups/{id}';
};

export type UpdateApiPersonalGroupsIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateApiPersonalGroupsIdPatchError = UpdateApiPersonalGroupsIdPatchErrors[keyof UpdateApiPersonalGroupsIdPatchErrors];

export type UpdateApiPersonalGroupsIdPatchResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateApiSimpleGroupsPostData = {
    body: CreateSimpleGroupSchema;
    path?: never;
    query?: never;
    url: '/api/simple_groups/';
};

export type CreateApiSimpleGroupsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateApiSimpleGroupsPostError = CreateApiSimpleGroupsPostErrors[keyof CreateApiSimpleGroupsPostErrors];

export type CreateApiSimpleGroupsPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetMySimpleGroupsApiSimpleGroupsMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/simple_groups/me';
};

export type GetMySimpleGroupsApiSimpleGroupsMeGetResponses = {
    /**
     * Response Get My Simple Groups Api Simple Groups Me Get
     * Successful Response
     */
    200: Array<ReadSimpleGroupSchema>;
};

export type GetMySimpleGroupsApiSimpleGroupsMeGetResponse = GetMySimpleGroupsApiSimpleGroupsMeGetResponses[keyof GetMySimpleGroupsApiSimpleGroupsMeGetResponses];

export type DeleteApiSimpleGroupsIdDeleteData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/simple_groups/{id}';
};

export type DeleteApiSimpleGroupsIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteApiSimpleGroupsIdDeleteError = DeleteApiSimpleGroupsIdDeleteErrors[keyof DeleteApiSimpleGroupsIdDeleteErrors];

export type DeleteApiSimpleGroupsIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetApiSimpleGroupsIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/simple_groups/{id}';
};

export type GetApiSimpleGroupsIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetApiSimpleGroupsIdGetError = GetApiSimpleGroupsIdGetErrors[keyof GetApiSimpleGroupsIdGetErrors];

export type GetApiSimpleGroupsIdGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateApiSimpleGroupsIdPatchData = {
    body: UpdateSimpleGroupSchema;
    path: {
        /**
         * Id
         */
        id: string;
    };
    query?: never;
    url: '/api/simple_groups/{id}';
};

export type UpdateApiSimpleGroupsIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateApiSimpleGroupsIdPatchError = UpdateApiSimpleGroupsIdPatchErrors[keyof UpdateApiSimpleGroupsIdPatchErrors];

export type UpdateApiSimpleGroupsIdPatchResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateMessageApiMessagesPostData = {
    body: CreateMessageNoUserSchema;
    path?: never;
    query?: never;
    url: '/api/messages/';
};

export type CreateMessageApiMessagesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMessageApiMessagesPostError = CreateMessageApiMessagesPostErrors[keyof CreateMessageApiMessagesPostErrors];

export type CreateMessageApiMessagesPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetLatestMessagesByGroupApiMessagesGroupIdGetData = {
    body?: never;
    path: {
        /**
         * Group Id
         */
        group_id: string;
    };
    query?: never;
    url: '/api/messages/{group_id}';
};

export type GetLatestMessagesByGroupApiMessagesGroupIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLatestMessagesByGroupApiMessagesGroupIdGetError = GetLatestMessagesByGroupApiMessagesGroupIdGetErrors[keyof GetLatestMessagesByGroupApiMessagesGroupIdGetErrors];

export type GetLatestMessagesByGroupApiMessagesGroupIdGetResponses = {
    /**
     * Response Get Latest Messages By Group Api Messages  Group Id  Get
     * Successful Response
     */
    200: Array<ReadMessageSchema>;
};

export type GetLatestMessagesByGroupApiMessagesGroupIdGetResponse = GetLatestMessagesByGroupApiMessagesGroupIdGetResponses[keyof GetLatestMessagesByGroupApiMessagesGroupIdGetResponses];

export type RegisterSchemasRouteRegisterSchemasGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/register_schemas';
};

export type RegisterSchemasRouteRegisterSchemasGetResponses = {
    /**
     * Response Register Schemas Route Register Schemas Get
     * Successful Response
     */
    200: WsInDataSchema | WsOutDataSchema | WsInMessageSchema | WsOutMessageSchema;
};

export type RegisterSchemasRouteRegisterSchemasGetResponse = RegisterSchemasRouteRegisterSchemasGetResponses[keyof RegisterSchemasRouteRegisterSchemasGetResponses];

export type PingApiHealthcheckGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/healthcheck';
};

export type PingApiHealthcheckGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};