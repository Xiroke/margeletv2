"""empty message

Revision ID: e64f3366e169
Revises: 2d9c920eed49
Create Date: 2025-04-13 19:50:04.494667

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import fastapi_users_db_sqlalchemy

# revision identifiers, used by Alembic.
revision: str = "e64f3366e169"
down_revision: Union[str, None] = "2d9c920eed49"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "refresh_token",
        sa.Column(
            "user_id", fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False
        ),
        sa.Column("token", sa.String(length=43), nullable=False),
        sa.Column(
            "created_at",
            fastapi_users_db_sqlalchemy.generics.TIMESTAMPAware(timezone=True),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("token"),
    )
    op.create_index(
        op.f("ix_refresh_token_created_at"),
        "refresh_token",
        ["created_at"],
        unique=False,
    )
    op.drop_index("ix_accesstoken_created_at", table_name="accesstoken")
    op.drop_table("accesstoken")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accesstoken",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("token", sa.VARCHAR(length=43), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name="accesstoken_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("token", name="accesstoken_pkey"),
    )
    op.create_index(
        "ix_accesstoken_created_at", "accesstoken", ["created_at"], unique=False
    )
    op.drop_index(op.f("ix_refresh_token_created_at"), table_name="refresh_token")
    op.drop_table("refresh_token")
    # ### end Alembic commands ###
